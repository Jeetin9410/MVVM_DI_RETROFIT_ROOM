plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.hilt.android.gradle.plugin)
    id("org.jetbrains.kotlin.kapt")
}

android {
    namespace 'com.example.mvvm_di_retrofit_room'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.mvvm_di_retrofit_room"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout

    //Compose
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.ui) // Compose UI
    implementation(libs.androidx.material) // Compose Material
    implementation(libs.androidx.ui.tooling.preview) // Compose Tooling
    implementation(libs.androidx.activity.compose) // Compose Activity Integration

    // Dagger2
    implementation(libs.dagger)
    kapt(libs.dagger.compiler)

    // Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.compiler)

    // Koin
    implementation(libs.koin.android)

    // Retrofit & OkHttp
    implementation(libs.retrofit)
    implementation(libs.retrofit.gson)
    implementation(libs.okhttp)
    implementation(libs.okhttp.logging)

    // Room Database
    implementation(libs.room.runtime)
    kapt(libs.room.compiler)
    implementation(libs.room.ktx)

    // RecyclerView
    implementation(libs.recyclerview)

    // ViewModel & LiveData (Lifecycle)
    implementation(libs.lifecycle.viewmodel)
    implementation(libs.lifecycle.livedata)

    // Kotlin Coroutines & Flows
    implementation(libs.coroutines.core)
    implementation(libs.coroutines.android)


    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    //androidTestImplementation(libs.androidx.ui.test.junit4) // Compose Testing
    debugImplementation(libs.androidx.ui.tooling) // Compose Debug Tooling
}